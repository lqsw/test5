import { IDirectlyDubboProps, IInvokeParam } from './types';
/**
 * 直连dubbo的远程方法，方便快速测试还没有发布到zookeeper的的方法
 * Usage:
 *
const dubbo = DirectlyDubbo.from({
  dubboAddress: 'localhost:20880',
  dubboVersion: '2.0.0',
  dubboInvokeTimeout: 10,
});

const demoService = dubbo.proxyService<IDemoService>({
  dubboInterface: 'com.alibaba.dubbo.demo.DemoService',
  version: '1.0.0',
  methods: {
    sayHello(name) {
      return [java.String(name)];
    },

    echo() {},

    test() {},

    getUserInfo() {
      return [
        java.combine('com.alibaba.dubbo.demo.UserRequest', {
          id: 1,
          name: 'nodejs',
          email: 'node@qianmi.com',
        }),
      ];
    },
  },
});
 */
export default class DirectlyDubbo {
    private constructor();
    private readonly _props;
    private readonly _socketWorker;
    private readonly _queue;
    private _socketStatus;
    static from(props: IDirectlyDubboProps): DirectlyDubbo;
    proxyService<T extends Object>(invokeParam: IInvokeParam): T;
    /**
     * 成功的处理队列的任务
     * @param requestId
     * @param res
     */
    private success;
    /**
     * 失败的处理队列的任务
     * @param requestId
     * @param err
     */
    private fail;
    private addQueue;
    private onConnect;
    private onData;
    private onClose;
}
