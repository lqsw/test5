import Queue from './queue';
import { IZkClientProps } from './types';
/**
 * scheduler
 * 1. 初始化zookeeper和socket-agent
 * 2. 接受所有的socket-worker的事件
 * 3. 处理用户的请求
 * 4. 接受zookeeper的变化，更新Server-agent
 */
export default class Scheduler {
    constructor(props: IZkClientProps, queue: Queue);
    private _status;
    private _queue;
    private _zkClient;
    private _dubboAgent;
    /**
     * static factory method
     * @param props
     */
    static from(props: IZkClientProps, queue: Queue): Scheduler;
    /**
     * handle request in queue
     * @param requestId
     */
    private _handleQueueRequest;
    /**
     * 处理zookeeper的数据
     */
    private _handleZkClientOnData;
    /**
     * 处理zookeeper的错误
     */
    private _handleZkClientError;
    /**
     * 处理schedule的failed状态
     */
    private _handleFailed;
    /**
     * 发起dubbo调用
     * @param ctx
     * @param agentHostList
     */
    private _handleDubboInvoke;
    private _handleOnConnect;
    /**
     * 当收到数据的时候
     */
    private _handleOnData;
    /**
     * 处理某一个SocketWorker被关闭的状态
     */
    private _handleOnClose;
}
