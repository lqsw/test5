/// <reference types="node" />
import { IObservable, TDecodeBuffSubscriber } from './types';
/**
 * 在并发的tcp数据传输中，会出现少包，粘包的现象
 * 好在tcp的传输是可以保证顺序的
 * 我们需要抽取一个buff来统一处理这些数据
 */
export default class DecodeBuffer implements IObservable<TDecodeBuffSubscriber> {
    /**
     * 初始化一个DecodeBuffer
     * @param pid socket-worker的pid
     */
    private constructor();
    private readonly _pid;
    private _buffer;
    private _subscriber;
    static from(pid: number): DecodeBuffer;
    receive(data: Buffer): void;
    clearBuffer(): void;
    subscribe(subscriber: TDecodeBuffSubscriber): this;
}
